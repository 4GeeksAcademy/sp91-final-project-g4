"""empty message

Revision ID: d3f711babfbd
Revises: 9ecbcf6cd3f5
Create Date: 2025-02-18 15:10:47.477321

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd3f711babfbd'
down_revision = '9ecbcf6cd3f5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('order_history')
    with op.batch_alter_table('customers', schema=None) as batch_op:
        batch_op.drop_constraint('customers_company_name_key', type_='unique')
        batch_op.drop_constraint('customers_email_key', type_='unique')
        batch_op.create_unique_constraint(None, ['user_id'])
        batch_op.drop_column('email')

    with op.batch_alter_table('locations', schema=None) as batch_op:
        batch_op.drop_constraint('locations_destiny_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('locations_origin_id_fkey', type_='foreignkey')
        batch_op.drop_column('destiny_id')
        batch_op.drop_column('origin_id')

    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.add_column(sa.Column('base_cost', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('corrector_cost', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('final_cost', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('status_order', sa.Enum('Order created', 'Order acepted', 'In transit', 'Delivered', 'Cancel', name='status_order_type'), nullable=False))
        batch_op.add_column(sa.Column('order_created_date', sa.Date(), nullable=False))
        batch_op.add_column(sa.Column('order_acepted_date', sa.Date(), nullable=False))
        batch_op.add_column(sa.Column('in_transit_date', sa.Date(), nullable=False))
        batch_op.add_column(sa.Column('delivered_date', sa.Date(), nullable=False))
        batch_op.add_column(sa.Column('cancel_date', sa.Date(), nullable=False))
        batch_op.add_column(sa.Column('destiny_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('origin_id', sa.Integer(), nullable=True))
        batch_op.drop_constraint('orders_final_price_key', type_='unique')
        batch_op.create_unique_constraint(None, ['final_cost'])
        batch_op.create_foreign_key(None, 'locations', ['destiny_id'], ['id'])
        batch_op.create_foreign_key(None, 'locations', ['origin_id'], ['id'])
        batch_op.drop_column('base_price')
        batch_op.drop_column('final_price')
        batch_op.drop_column('init_date')
        batch_op.drop_column('tariff_validity')
        batch_op.drop_column('corrector')
        batch_op.drop_column('end_date')
        batch_op.drop_column('created_date')

    with op.batch_alter_table('providers', schema=None) as batch_op:
        batch_op.drop_constraint('providers_email_key', type_='unique')
        batch_op.create_unique_constraint(None, ['user_id'])
        batch_op.drop_column('email')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('providers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_unique_constraint('providers_email_key', ['email'])

    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_date', sa.DATE(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('end_date', sa.DATE(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('corrector', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('tariff_validity', sa.DATE(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('init_date', sa.DATE(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('final_price', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('base_price', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_unique_constraint('orders_final_price_key', ['final_price'])
        batch_op.drop_column('origin_id')
        batch_op.drop_column('destiny_id')
        batch_op.drop_column('cancel_date')
        batch_op.drop_column('delivered_date')
        batch_op.drop_column('in_transit_date')
        batch_op.drop_column('order_acepted_date')
        batch_op.drop_column('order_created_date')
        batch_op.drop_column('status_order')
        batch_op.drop_column('final_cost')
        batch_op.drop_column('corrector_cost')
        batch_op.drop_column('base_cost')

    with op.batch_alter_table('locations', schema=None) as batch_op:
        batch_op.add_column(sa.Column('origin_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('destiny_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('locations_origin_id_fkey', 'orders', ['origin_id'], ['id'])
        batch_op.create_foreign_key('locations_destiny_id_fkey', 'orders', ['destiny_id'], ['id'])

    with op.batch_alter_table('customers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_unique_constraint('customers_email_key', ['email'])
        batch_op.create_unique_constraint('customers_company_name_key', ['company_name'])

    op.create_table('order_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('status_order', postgresql.ENUM('Pending', 'In progress', 'Init', 'End', 'Cancel', name='status_order_type'), autoincrement=False, nullable=False),
    sa.Column('change_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('order_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name='order_history_order_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='order_history_pkey')
    )
    # ### end Alembic commands ###
